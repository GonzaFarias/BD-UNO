DROP TABLE IF EXISTS COMIDAS;
DROP TABLE IF EXISTS INGREDIENTES;
DROP TABLE IF EXISTS RECETAS;
DROP TABLE IF EXISTS PROV_INGREDIENTES;
DROP TABLE IF EXISTS PROVEEDORES;
--
CREATE TABLE COMIDAS
(COD_COM CHAR(5),
 NOMBRE VARCHAR(20),
 PRECIO_VTA DEC(8,2));
CREATE TABLE INGREDIENTES
(COD_ING CHAR(5),
 NOMBRE VARCHAR(20),
 STOCK INT,
 STOCK_MIN INT,
 STOCK_MAX INT);
CREATE TABLE RECETAS
(COD_COM CHAR(5),
 COD_ING CHAR(5),
 CANTIDAD INT);
CREATE TABLE PROV_INGREDIENTES
(COD_PROV CHAR(5),
 COD_ING CHAR(5),
 FEC_ULT_COMPRA DATE);
CREATE TABLE PROVEEDORES
(COD_PROV CHAR(5),
 NOMBRE VARCHAR(20),
 DIRECCION VARCHAR(20),
 LOCALIDAD VARCHAR(20));
--TICKET_CAB		(NROF, FECHA)
-- TICKET_DETALLE	(NROF, COD_COM, CANTIDAD, PRECIO_UNITARIO)
--
INSERT INTO COMIDAS VALUES ('C4000','PAELLA',2100);
INSERT INTO COMIDAS VALUES ('C4001','ARROZ CON POLLO',800);
INSERT INTO COMIDAS VALUES ('C4002','PIZZA',1200);
INSERT INTO COMIDAS VALUES ('C4003','MILANESA NAPOLITANA',1200);
INSERT INTO COMIDAS VALUES ('C4004','FIDEOS CON SALSA',800);

INSERT INTO INGREDIENTES VALUES ('I0001','ARROZ',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0002','PAN RALLADO',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0003','POLLO',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0004','HARINA',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0005','MUZARELA',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0006','MARISCOS',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0007','AZAFRAN PARA ARROZ',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0008','CARNE PARA MILANESA',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0009','PAN RALLADO',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0010','HUEVO',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0011','FIDEOS',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0012','RAVIOLES',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0013','SALSA TOMATE',30,20,40);
INSERT INTO INGREDIENTES VALUES ('I0014','PAPAS',30,20,40);

INSERT INTO RECETAS VALUES ('C4000','I0001',100);
INSERT INTO RECETAS VALUES ('C4000','I0006',100);
INSERT INTO RECETAS VALUES ('C4000','I0007',100);
INSERT INTO RECETAS VALUES ('C4001','I0001',100);
INSERT INTO RECETAS VALUES ('C4001','I0003',100);
INSERT INTO RECETAS VALUES ('C4002','I0004',100);
INSERT INTO RECETAS VALUES ('C4002','I0005',100);
INSERT INTO RECETAS VALUES ('C4002','I0010',100);
INSERT INTO RECETAS VALUES ('C4002','I0013',100);
INSERT INTO RECETAS VALUES ('C4003','I0002',100);
INSERT INTO RECETAS VALUES ('C4003','I0008',100);
INSERT INTO RECETAS VALUES ('C4003','I0005',100);
INSERT INTO RECETAS VALUES ('C4003','I0010',100);
INSERT INTO RECETAS VALUES ('C4003','I0013',100);
INSERT INTO RECETAS VALUES ('C4004','I0011',100);
INSERT INTO RECETAS VALUES ('C4004','I0013',100);

INSERT INTO PROV_INGREDIENTES  VALUES ('P1','I0001','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P1','I0002','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P1','I0003','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P2','I0001','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P2','I0002','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P2','I0003','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P2','I0010','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P2','I0011','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P2','I0012','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P2','I0013','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P2','I0014','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P3','I0004','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P3','I0005','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P3','I0006','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P3','I0007','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P3','I0008','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P3','I0009','2022/11/20');
INSERT INTO PROV_INGREDIENTES  VALUES ('P3','I0010','2022/11/20');

INSERT INTO PROVEEDORES VALUES('P1','LA SERENISIMA','SALTA 1','MERLO');
INSERT INTO PROVEEDORES VALUES('P2','PROV 2','SALTA 22','MERLO');
INSERT INTO PROVEEDORES VALUES('P3','PROV 3','SALTA 33','MORON');

-------------------------------RESOLUCION PARCIAL------------------------------

--COMIDAS 			(cod_com, nombre, precio_vta)
--INGREDIENTES  	(cod_ing, nombre, stock, stock_min, stock_max)
--RECETA 			(cod_com, cod_ing, cantidad)
--PROV_INGREDIENTES (cod_prov, cod_ing, fec_ult_compra)
--PROVEEDORES 		(cod_prov, nombre, direccion, localidad)

--A) Listar los datos completos de los ingredientes que sean parte de las comidas que tienen precio de venta mayor a $1000
-- Solo incluir ingredientes que tengan más de un proveedor en "Merlo".

SELECT i.* FROM INGREDIENTES i, PROV_INGREDIENTES pi, PROVEEDORES p
WHERE i.cod_ing = pi.cod_ing 
AND p.cod_prov = pi.cod_prov 
AND p.localidad ILIKE 'Merlo'
AND i.cod_ing IN (SELECT r.cod_ing FROM RECETAS r, COMIDAS c
				  WHERE r.cod_com = c.cod_com
				  AND c.precio_vta > 1000)
GROUP BY i.cod_ing, i.nombre, i.stock, i.stock_min, i.stock_max
HAVING COUNT(*) > 1


--B) Listar las comidas con precio de venta mayor a $900, que no tienen ingredientes del proveedor "La Serenisima"
--y que tienen más ingredientes que la comida "Paella".

SELECT c.* FROM COMIDAS c, RECETAS r
WHERE c.cod_com = r.cod_com 
AND c.precio_vta > 900 
AND c.cod_com NOT IN (SELECT rr.cod_com FROM RECETAS rr, PROV_INGREDIENTES pi, PROVEEDORES p
				      WHERE rr.cod_ing = pi.cod_ing 
					  AND pi.cod_prov = p.cod_prov 
					  AND p.nombre ILIKE 'La Serenisima')
GROUP BY c.cod_com, c.nombre, c.precio_vta
HAVING 	COUNT (r.cod_ing)> (SELECT COUNT(rrr.cod_ing) FROM COMIDAS cc, RECETAS rrr       --En having solo se usa lo del groupby y funciones
						    WHERE rrr.cod_com = cc.cod_com 
							AND cc.nombre ILIKE 'Paella')



-------------------------- PARCIAL IGNA --------------------------

-- Jugadores(dni, nombre, apellido, fec_nac)
-- Juega_en(cod, dni, fec_desde)
-- Equipos(cod, nombre)

--a)Listar los datos de los Jugadores que juegan ACTUALMENTE en River y la Fecha desde la que juega. Y ordenar por dni de menor a mayor


SELECT j.*, je.fec_desde FROM JUGADORES j, JUEGA_EN je, EQUIPOS e 
WHERE j.dni = je.dni AND je.cod = e.cod AND e.nombre ILIKE 'River'
GROUP BY j.dni, j.nombre, j.apellido, j.fec_nac,  je.fec_desde
HAVING je.fec_desde = (SELECT MAX(je2.fec_desde) FROM JUEGA_EN je2 
					   WHERE je2.dni = je.dni)
ORDER BY j.dni ASC					   

--b)Listar los datos de los Jugadores que NUNCA jugaron en Boca

SELECT j.* FROM JUGADORES j
WHERE j.dni NOT IN (SELECT je.dni FROM JUEGA_EN je, EQUIPOS e
				    WHERE je.cod = e.cod 
				    AND e.nombre ILIKE 'Boca')
GROUP BY j.dni, j.nombre, j.apellido, j.fec_nac

--c)Listar los datos de los Jugadores nacidos despues del 1-Ene-1990 que hayan jugado en mas cantidad de Equipos que el Jugador Gabriel Batistuta
--Tambien decir en que cantidad de equipos jugo.

SELECT j.*, COUNT(DISTINCT je.cod) AS cantidad_equipos_jugados FROM JUGADORES j, JUEGA_EN je
WHERE j.dni = je.dni AND j.fec_nac > '01-01-1990' 
GROUP BY j.dni, j.nombre, j.apellido, j.fec_nac
HAVING COUNT(DISTINCT je.cod) > (SELECT COUNT(DISTINCT je2.cod) FROM JUGADORES jj, JUEGA_EN je2
								 WHERE jj.dni = je2.dni AND jj.nombre ILIKE 'Gabriel' AND jj.apellido ILIKE 'BATISTUTA')













